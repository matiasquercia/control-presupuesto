{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","console","log","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3c2f55e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => (\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n);\r\n \r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\n\r\nconst Pregunta = ({ guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n\r\n    // definir el state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //Funcion que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad(parseInt(e.target.value,10))\r\n    }\r\n\r\n    // Submit para definir presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if(cantidad < 1 || isNaN(cantidad)) {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        //Si se pasa la validacion\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n\r\n            {error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null}\r\n\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    placeholder=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pregunta;","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\n\r\nconst Formulario = ({ guardarGasto, guardarCrearGasto }) => {\r\n\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState('');\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //cuando el usuario agrega un gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        console.log(gasto);\r\n\r\n\r\n        //pasar el gasto al componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n\r\n        //resetear el form\r\n        guardarNombre('');\r\n        guardarCantidad('');\r\n    };\r\n\r\n    return (\r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos</h2>\r\n\r\n            {error ? <Error mensaje=\"Ambos campos son obligatorios o el es presupuesto incorrecto\" /> : null}\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)} \r\n                />\r\n            </div>\r\n\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value, 10))} \r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar Gasto\" />\r\n\r\n        </form>\r\n\r\n    );\r\n}\r\n \r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Gasto = ({gasto}) => (\r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n\r\n            <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n\r\n        </p>\r\n    </li>\r\n\r\n);\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => (\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        {gastos.map (gasto => (\r\n            <Gasto\r\n                key={gasto.id}\r\n                gasto={gasto}\r\n            />            \r\n        ))}\r\n\r\n\r\n    </div>\r\n);\r\n\r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\n \r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n\r\n    let clase;\r\n\r\n    if((presupuesto/4) > restante ) {\r\n        clase = 'alert alert-danger';\r\n    }else if ( (presupuesto/2) > restante) {\r\n        clase = 'alert alert-warning';\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n\r\n}","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { revisarPresupuesto } from '../helpers';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return (  \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className= {revisarPresupuesto(presupuesto,restante)} >\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n \r\nexport default ControlPresupuesto;","import React, {useState, useEffect} from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  // definir el state\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarpregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [creargasto, guardarCrearGasto] = useState(false);\n\n  //UseEffect que actualiza el restante\n\n  useEffect(() => {\n\n    if(creargasto) {\n\n      // agrega el nuevo presupuesto\n      guardarGastos([\n        ...gastos,\n        gasto\n      ]);\n\n      //resta del presupuesto actual\n      const presupuestoRestate = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestate);\n\n      //Resetear a false\n      guardarCrearGasto(false);\n    }\n  }, [gasto, creargasto, gastos, restante])\n\n\n\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenido\">\n          { mostrarpregunta ? \n            ( <Pregunta \n                guardarPresupuesto={guardarPresupuesto}\n                guardarRestante={guardarRestante}\n                actualizarPregunta={actualizarPregunta}\n              /> \n            ) : \n            (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario \n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                />\n              </div>\n\n              <div className=\"one-half column\">\n                <Listado \n                  gastos={gastos}\n                />\n\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n\n              </div>\n            </div>\n            )\n          }\n\n        </div>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}